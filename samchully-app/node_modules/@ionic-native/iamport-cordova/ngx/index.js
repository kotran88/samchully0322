import { __extends } from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordova } from '@ionic-native/core';
var IamportCordova = /** @class */ (function (_super) {
    __extends(IamportCordova, _super);
    function IamportCordova() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    IamportCordova.prototype.payment = function (paymentObject) { return cordova(this, "payment", {}, arguments); };
    IamportCordova.prototype.certification = function (certificationObject) { return cordova(this, "certification", {}, arguments); };
    IamportCordova.pluginName = "IamportCordova";
    IamportCordova.plugin = "iamport-cordova";
    IamportCordova.pluginRef = "cordova.plugins.IamportCordova";
    IamportCordova.repo = "https://github.com/iamport/iamport-cordova";
    IamportCordova.platforms = ["ios", "android"];
    IamportCordova.decorators = [
        { type: Injectable }
    ];
    return IamportCordova;
}(IonicNativePlugin));
export { IamportCordova };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL2lhbXBvcnQtY29yZG92YS9uZ3gvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyw4QkFBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUEwRnBDLGtDQUFpQjs7OztJQU9uRCxnQ0FBTyxhQUFDLGFBQTRCO0lBVXBDLHNDQUFhLGFBQUMsbUJBQXdDOzs7Ozs7O2dCQWxCdkQsVUFBVTs7eUJBMUZYO0VBMkZvQyxpQkFBaUI7U0FBeEMsY0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBsdWdpbiwgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuXG5kZWNsYXJlIGNvbnN0IGNvcmRvdmE6IENvcmRvdmEgJiB7IHBsdWdpbnM6IGFueSB9O1xuXG5leHBvcnQgaW50ZXJmYWNlIFBheW1lbnRPYmplY3Qge1xuICB0aXRsZT86IFRpdGxlRGF0YTsgLy8gd2VidmlldyB0aXRsZSBkYXRhXG4gIHVzZXJDb2RlOiBzdHJpbmc7IC8vIHVzZXIgaWRlbnRpZmljYXRpb24gY29kZVxuICBkYXRhOiBQYXltZW50RGF0YTsgLy8gcGF5bWVudCBkYXRhXG4gIGNhbGxiYWNrOiBhbnk7IC8vIGNhbGxiYWNrIGZ1bmN0aW9uIGFmdGVyIHBheW1lbnRcbn1cblxuZXhwb3J0IGludGVyZmFjZSBDZXJ0aWZpY2F0aW9uT2JqZWN0IHtcbiAgdGl0bGU/OiBUaXRsZURhdGE7IC8vIHdlYnZpZXcgdGl0bGUgZGF0YVxuICB1c2VyQ29kZTogc3RyaW5nOyAvLyB1c2VyIGlkZW50aWZpY2F0aW9uIGNvZGVcbiAgZGF0YTogQ2VydGlmaWNhdGlvbkRhdGE7IC8vIGNlcnRpZmljYXRpb24gZGF0YVxuICBjYWxsYmFjazogYW55OyAvLyBjYWxsYmFjayBmdW5jdGlvbiBhZnRlciBjZXJ0aWZpY2F0aW9uXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVGl0bGVEYXRhIHtcbiAgbmFtZT86IHN0cmluZzsgLy8gd2VidmlldyB0aXRsZSBuYW1lXG4gIGNvbG9yPzogc3RyaW5nOyAvLyB3ZWJ2aWV3IHRpdGxlIGJhY2tncm91bmQgY29sb3Jcbn1cblxuZXhwb3J0IGludGVyZmFjZSBQYXltZW50RGF0YSB7XG4gIHBnPzogc3RyaW5nOyAvLyBwYXltZW50IGdhdGV3YXkgdHlwZVxuICBwYXlfbWV0aG9kPzogc3RyaW5nOyAvLyBwYXltZW50IG1ldGhvZFxuICBuYW1lOiBzdHJpbmc7IC8vIG5hbWUgb2Ygb3JkZXJcbiAgbWVyY2hhbnRfdWlkPzogc3RyaW5nOyAvLyB1bmlxdWUgbWVyY2hhbnQgaWRcbiAgYW1vdW50OiBzdHJpbmc7IC8vIHBheW1lbnQgYW1vdW50XG4gIGJ1eWVyX25hbWU/OiBzdHJpbmc7IC8vIGJ1eWVyIG5hbWVcbiAgYnV5ZXJfdGVsPzogc3RyaW5nOyAvLyBidXllciBjb250YWN0XG4gIGJ1eWVyX2VtYWlsPzogc3RyaW5nOyAvLyBidXllciBlbWFpbCBhZGRyZXNzXG4gIGJ1eWVyX2FkZHI/OiBzdHJpbmc7IC8vIGJ1eWVyIGFkZHJlc3NcbiAgYnV5ZXJfcG9zdGNvZGU/OiBzdHJpbmc7IC8vIGJ1eWVyIHBvc3Rjb2RlXG4gIGFwcF9zY2hlbWU6IHN0cmluZzsgLy8gY3VzdG9tIGFwcCB1cmwgc2NoZW1lXG4gIGN1c3RvbV9kYXRhPzogYW55OyAvLyBjdXN0b20gZGF0YVxuICBub3RpY2VfdXJsPzogc3RyaW5nOyAvLyBub3RpZmljYXRpb24gdXJsXG4gIGVzY3Jvdz86IGJvb2xlYW47IC8vIHdoZXRoZXIgdGhlIHR5cGUgb2YgdGhpcyBvcmRlciBpcyBlc2Nyb3dcbiAgZGlnaXRhbD86IGJvb2xlYW47IC8vIHdoZXRoZXIgdGhpcyBvcmRlciBpcyBmb3IgcmVhbCBwcm9kdWN0cyBvciBjb250ZW50c1xuICBkaXNwbGF5Pzoge1xuICAgIGNhcmRfcXVvdGE/OiBudW1iZXJbXTsgLy8gY3JlZGl0IGNhcmQgaW5zdGFsbG1lbnQgc2V0dGluZyB2YWx1ZVxuICB9O1xuICBjdXJyZW5jeT86IHN0cmluZzsgLy8gcGF5bWVudCBjdXJyZW5jeVxuICBjdXN0b21lcl91aWQ/OiBzdHJpbmc7IC8vIHVuaXF1ZSBjdXN0b21lciBpZCBmb3Igc3Vic2NyaXB0aW9uIHBheW1lbnRzXG4gIHRheF9mcmVlPzogc3RyaW5nOyAvLyB0YXggYW1vdW50XG4gIGxhbmd1YWdlPzogc3RyaW5nOyAvLyBsYW5ndWFnZSB0eXBlXG4gIHZiYW5rX2R1ZT86IHN0cmluZzsgLy8gdmJhbmsgZHVlIGRhdGVcbiAgYml6X251bT86IHN0cmluZzsgLy8gYnVzaW5lc3MgbnVtYmVyXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ2VydGlmaWNhdGlvbkRhdGEge1xuICBjb21wYW55Pzogc3RyaW5nOyAvLyBjb21wYW55IG5hbWVcbiAgcGhvbmU/OiBzdHJpbmc7IC8vIGNlbGwgcGhvbmUgbnVtYmVyXG4gIG5hbWU/OiBzdHJpbmc7IC8vIG5hbWVcbiAgY2Fycmllcj86IHN0cmluZzsgLy8gY2FycmllciBjb2RlXG4gIGJpcnRoPzogc3RyaW5nOyAvLyBiaXJ0aCBkYXRlXG4gIG1lcmNoYW50X3VpZD86IHN0cmluZzsgLy8gdW5pcXVlIG1lcmNoYW50IGlkXG4gIG1pbl9hZ2U/OiBzdHJpbmc7IC8vIG1pbmltdW0gYWdlIHRvIGFsbG93IGNlcnRpZmljYXRpb25cbiAgcG9wdXA/OiBib29sZWFuOyAvLyB3aGV0aGVyIHRoZSB3ZWJ2aWV3IGlzIHBvcHVwXG59XG5cbi8qKlxuICogQG5hbWUgSWFtcG9ydCBDb3Jkb3ZhXG4gKiBAZGVzY3JpcHRpb25cbiAqIFRoaXMgcGx1Z2luIGRvZXMgc29tZXRoaW5nXG4gKlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBJYW1wb3J0Q29yZG92YSB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvaWFtcG9ydC1jb3Jkb3ZhL25neCc7XG4gKlxuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgaWFtcG9ydENvcmRvdmE6IElhbXBvcnRDb3Jkb3ZhKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKlxuICogdGhpcy5pYW1wb3J0Q29yZG92YS5mdW5jdGlvbk5hbWUoJ0hlbGxvJywgMTIzKVxuICogICAudGhlbigocmVzOiBhbnkpID0+IGNvbnNvbGUubG9nKHJlcykpXG4gKiAgIC5jYXRjaCgoZXJyb3I6IGFueSkgPT4gY29uc29sZS5lcnJvcihlcnJvcikpO1xuICpcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0lhbXBvcnRDb3Jkb3ZhJyxcbiAgcGx1Z2luOiAnaWFtcG9ydC1jb3Jkb3ZhJyxcbiAgcGx1Z2luUmVmOiAnY29yZG92YS5wbHVnaW5zLklhbXBvcnRDb3Jkb3ZhJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9pYW1wb3J0L2lhbXBvcnQtY29yZG92YScsXG4gIHBsYXRmb3JtczogWydpb3MnLCAnYW5kcm9pZCddLFxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBJYW1wb3J0Q29yZG92YSBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcbiAgLyoqXG4gICAqIFRoaXMgZnVuY3Rpb24gaXMgdG8gbG9hZCBhIHdlYnZpZXcgb2YgYSBwYXltZW50IGdhdGV3YXkgdG8gcGF5IGZvciBzb21ldGhpbmdcbiAgICogQHBhcmFtIHBheW1lbnRPYmplY3Qge1BheW1lbnRPYmplY3R9IFBheW1lbnQgZGF0YSB0byBzZXQgdGhlIHBheW1lbnQgd2Vidmlld1xuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IEEgY2FsbGJhY2sgZnVuY3Rpb24gb2YgdGhlIHBheW1lbnQgZGF0YSBpcyB0cmlnZ2VyZWQgd2hlbiB0aGUgd2VidmlldyBpcyBjbG9zZWRcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgcGF5bWVudChwYXltZW50T2JqZWN0OiBQYXltZW50T2JqZWN0KTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm4gY29yZG92YS5wbHVnaW5zLklhbXBvcnRDb3Jkb3ZhLnBheW1lbnQocGF5bWVudE9iamVjdCk7XG4gIH1cblxuICAvKipcbiAgICogVGhpcyBmdW5jdGlvbiBpcyB0byBsb2FkIGEgd2VidmlldyBmb3IgaWRlbnRpZmljYXRpb24gd2l0aCBjYXJyaWVyIHR5cGUobGlrZSBWZXJpem9uKSwgbmFtZSBhbmQgcGhvbmUgbnVtYmVyXG4gICAqIEBwYXJhbSBjZXJ0aWZpY2F0aW9uT2JqZWN0IHtDZXJ0aWZpY2F0aW9uT2JqZWN0fSBDZXJ0aWZpY2F0aW9uIGRhdGEgdG8gc2V0IHRoZSBjZXJ0aWZpY2F0aW9uIHdlYnZpZXdcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBBIGNhbGxiYWNrIGZ1bmN0aW9uIG9mIHRoZSBjZXJ0aWZpY2F0aW9uIGRhdGEgaXMgdHJpZ2dlcmVkIHdoZW4gdGhlIHdlYnZpZXcgaXMgY2xvc2VkXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGNlcnRpZmljYXRpb24oY2VydGlmaWNhdGlvbk9iamVjdDogQ2VydGlmaWNhdGlvbk9iamVjdCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuIGNvcmRvdmEucGx1Z2lucy5JYW1wb3J0Q29yZG92YS5jZXJ0aWZpY2F0aW9uKGNlcnRpZmljYXRpb25PYmplY3QpO1xuICB9XG59XG4iXX0=